{"version":3,"sources":["../../src/js/toaster.js"],"names":["ToasterObject","Default","title","content","delay","position","DefaultTitle","text","icon","image","close","info","ToasterContainer","Toaster","opt","_open","_getContainer","config","split","ver","hor","includes","html","this","_makeContainer","$","appendTo","_makeBody","css","_makeHeader","_objectSpread","eImage","_makeHtml","undefined","toast","animation","autohide","on","remove","setDefault","opts","k"],"mappings":";;;;;s3BAcC,IAiBGA,EAdEC,EAAU,CACZC,OAAU,EACVC,QAAU,sBACVC,MAAU,IACVC,SAAU,aAERC,EAAe,CACjBC,KAAU,GACVC,KAAU,KACVC,MAAU,KACVC,OAAU,EACVC,MAAU,GAIVC,EAAmB,GAQjBC,aACF,SAAAA,EAAYC,EAAKZ,GACV,OAASY,IAERd,IACAA,EAAgB,IAAIa,EAAQ,OAChCb,EAAce,MAAMD,EAAKZ,+BAK7Bc,cAAA,SAAcC,GACV,IAAIZ,GAAYY,EAAOZ,UAAY,aAAaa,MAAM,KAClDC,EAAMd,EAAS,IAAM,MACrBe,EAAMf,EAAS,IAAM,QASzB,GAPI,CAAC,MAAM,UAAUgB,SAASF,KAC1BA,EAAM,OACN,CAAC,OAAO,SAAS,SAASE,SAASD,KACnCA,EAAM,SAIPR,EAFHP,EAAcc,EAAN,IAAaC,GAGjB,OAAOR,EAAiBP,GAE5B,IAAIiB,EAAOC,KAAKC,eAAeL,EAAKC,GAGpC,OAFAR,EAAiBP,GAAYoB,EAAEH,GAAMI,SAAS,QAEvCd,EAAiBP,MAG5BsB,UAAA,SAAUV,GACN,MAAA,2BAAkCA,EAAOd,QAAzC,YAGJqB,eAAA,SAAeL,EAAKC,GAChB,IAAIQ,EAAG,8BAAiCT,EAAjC,sBAOP,MAAA,sDAJIS,GADO,WAARR,EACO,8BAEGA,EAAN,SAEP,cAGJS,YAAA,SAAYZ,GACR,IAAIA,EAAOf,MACP,MAAO,GAEgB,iBAAjBe,EAAOf,QACbe,EAAOf,MAAQ,CAAEK,KAAOU,EAAOf,QAEnC,IAAIA,EAAK4B,EAAA,GAAQxB,EAAiBW,EAAOf,OAErC6B,EAAS,GAiBb,OAhBG7B,EAAMO,MACLsB,EAAM,aAAgB7B,EAAMO,MAAtB,kCACFP,EAAMM,OACVuB,EAAM,aAAgB7B,EAAMM,KAAtB,eAaV,6DAEUuB,EAFV,sBAXc7B,EAAMK,KAAP,2BACoBL,EAAMK,KAD1B,YAAc,IAW3B,sBARaL,EAAMS,KAAP,UACIT,EAAMS,KADV,WAAc,IAQ1B,sBALcT,EAAMQ,MAAP,kLAAgB,IAK7B,oCAUJsB,UAAA,SAAUf,GAIN,MAAA,4GAHaM,KAAKM,YAAYZ,GAG9B,IAFaM,KAAKI,UAAUV,GAE5B,0BAMJF,MAAA,SAAMD,EAAKZ,GACW,iBAARY,IACNA,EAAM,CAACX,QAASW,QACbmB,IAAc/B,IACbY,EAAIZ,MAAQA,IAGpB,IAAMe,EAAMa,EAAA,GAAQ7B,EAAYa,GAC1BQ,EAAOC,KAAKS,UAAUf,GAE5BQ,EAAEH,GACGI,SAASH,KAAKP,cAAcC,IAC5BiB,MAAM,CACHC,WAAW,EACXC,UAAW,EACXhC,MAAWa,EAAOb,QAErB8B,MAAM,QACNG,GAAG,kBAAmB,WACnBZ,EAAEF,MAAMe,cAgBbC,WAAP,SAAkBC,GACd,IAAI,IAAIC,KAAKD,EACTvC,EAAQwC,GAAKD,EAAKC,yFAXtB,MAhJoB,wCAoJpB,OAAOxC,WAiBfwB,EAAC,QAASZ","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap-Toaster (v0.0.1): toaster.js\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\n const NAME               = 'toaster'\n const VERSION            = '0.0.1'\n\nconst Default = {\n    title   : false,\n    content : '<em>No content</em>',\n    delay   : 3000,\n    position: 'top right'\n}\nconst DefaultTitle = {\n    text    : '',\n    icon    : null,\n    image   : null,\n    close   : true,\n    info    : false\n}\n\nlet ToasterObject;\nlet ToasterContainer = {};\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Toaster {\n    constructor(opt, title) {\n        if(null === opt)\n            return\n        if(!ToasterObject)\n            ToasterObject = new Toaster(null);\n        ToasterObject._open(opt, title);\n    }\n\n    // Privates\n\n    _getContainer(config){\n        let position = (config.position || 'top right').split(' ');\n        let ver = position[0] || 'top'\n        let hor = position[1] || 'right'\n\n        if(!['top','bottom'].includes(ver))\n            ver = 'top'\n        if(!['left','center','right'].includes(hor))\n            hor = 'right'\n\n        position = `${ver} ${hor}`;\n\n        if(ToasterContainer[position])\n            return ToasterContainer[position];\n\n        let html = this._makeContainer(ver, hor);\n        ToasterContainer[position] = $(html).appendTo('body');\n\n        return ToasterContainer[position];\n    }\n\n    _makeBody(config){\n        return `<div class=\"toast-body\">${config.content}</div>`;\n    }\n\n    _makeContainer(ver, hor){\n        let css = `position:fixed;width:320px;${ver}:20px;z-index:1060;`\n\n        if(hor === 'center')\n            css+= 'left:50%;margin-left:-160px'\n        else\n            css+= `${hor}:20px`;\n\n        return `<div aria-live=\"polite\" aria-atomic=\"true\" style=\"${css}\"></div>`;\n    }\n\n    _makeHeader(config){\n        if(!config.title)\n            return '';\n\n        if(typeof config.title === 'string')\n            config.title = { text : config.title }\n        \n        let title = { ...DefaultTitle, ...config.title };\n\n        let eImage = '';\n        if(title.image)\n            eImage = `<img src=\"${title.image}\" class=\"rounded mr-2\" alt=\"#\">`;\n        else if(title.icon)\n            eImage = `<i class=\"${title.icon} mr-2\"></i>`;\n\n        let eTitle = !title.text ? ''\n            : `<strong class=\"mr-auto\">${title.text}</strong>`\n\n        let eInfo = !title.info ? ''\n            : `<small>${title.info}</small>`;\n\n        let eClose = !title.close  ? ''\n            : ` <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>`;\n\n        return `\n            <div class=\"toast-header\">\n                ${eImage}\n                ${eTitle}\n                ${eInfo}\n                ${eClose}\n            </div>\n        `;\n    }\n\n    _makeHtml(config){\n        let header = this._makeHeader(config);\n        let body   = this._makeBody(config);\n\n        return `\n            <div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                ${header} ${body}\n            </div>`;\n    }\n\n    _open(opt, title){\n        if(typeof opt !== 'object'){\n            opt = {content: opt}\n            if(undefined !== title)\n                opt.title = title;\n        }\n\n        const config = { ...Default, ...opt }\n        const html = this._makeHtml(config)\n\n        $(html)\n            .appendTo(this._getContainer(config))\n            .toast({\n                animation: true,\n                autohide : true,\n                delay    : config.delay\n            })\n            .toast('show')\n            .on('hidden.bs.toast', function(){\n                $(this).remove()\n            })\n    }\n\n    // Getters\n\n    static get VERSION() {\n        return VERSION\n    }\n\n    static get Default() {\n        return Default\n    }\n\n    // Static\n\n    static setDefault(opts){\n        for(let k in opts)\n            Default[k] = opts[k]\n    }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$[NAME] = Toaster\n\nexport default Toaster"]}